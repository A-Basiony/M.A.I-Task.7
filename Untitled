{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMS68jq+A3b0Ui5SGjKMU1U"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"t_u3abe5ncGW"},"outputs":[],"source":["import pygame\n","import sys\n","\n","pygame.init()\n","\n","WIDTH, HEIGHT = 800, 800\n","WHITE, BLACK = (255, 255, 255), (0, 0, 0)\n","SQUARE_SIZE = WIDTH // 8\n","screen = pygame.display.set_mode((WIDTH, HEIGHT))\n","pygame.display.set_caption('Chess Game')\n","\n","# Load images\n","def load_images():\n","    pieces = ['w_pawn', 'w_rook', 'w_knight', 'w_bishop', 'w_queen', 'w_king',\n","              'b_pawn', 'b_rook', 'b_knight', 'b_bishop', 'b_queen', 'b_king']\n","    images = {}\n","    for piece in pieces:\n","        images[piece] = pygame.transform.scale(pygame.image.load(f'/content/images/{piece}.png'), (SQUARE_SIZE, SQUARE_SIZE))\n","    return images\n","\n","images = load_images()\n","\n","# Chessboard Arrangments\n","def initialize_board():\n","    board = [['' for _ in range(8)] for _ in range(8)]\n","    board[0] = ['b_rook', 'b_knight', 'b_bishop', 'b_queen', 'b_king', 'b_bishop', 'b_knight', 'b_rook']\n","    board[1] = ['b_pawn'] * 8\n","    board[6] = ['w_pawn'] * 8\n","    board[7] = ['w_rook', 'w_knight', 'w_bishop', 'w_queen', 'w_king', 'w_bishop', 'w_knight', 'w_rook']\n","    return board\n","\n","# Display the board\n","def draw_board(board):\n","    for row in range(8):\n","        for col in range(8):\n","            color = WHITE if (row + col) % 2 == 0 else BLACK\n","            pygame.draw.rect(screen, color, pygame.Rect(col * SQUARE_SIZE, row * SQUARE_SIZE, SQUARE_SIZE, SQUARE_SIZE))\n","            piece = board[row][col]\n","            if piece:\n","                screen.blit(images[piece], (col * SQUARE_SIZE, row * SQUARE_SIZE))\n","    pygame.display.flip()\n","\n","# Piece movement logic\n","def is_valid_move(board, start, end, player):\n","    return True\n","\n","def move_piece(board, start, end):\n","    board[end[1]][end[0]] = board[start[1]][start[0]]\n","    board[start[1]][start[0]] = ''\n","\n","def check_checkmate(board, player):\n","    return False\n","\n","def main():\n","    clock = pygame.time.Clock()\n","    board = initialize_board()\n","    current_player = 'w'\n","\n","    while True:\n","        for event in pygame.event.get():\n","            if event.type == pygame.QUIT:\n","                pygame.quit()\n","                sys.exit()\n","\n","        draw_board(board)\n","\n","        if check_checkmate(board, current_player):\n","            print(f\"Checkmate! {current_player} loses.\")\n","            break\n","\n","        current_player = 'b' if current_player == 'w' else 'w'\n","        clock.tick(30)\n","\n","if __name__ == \"__main__\":\n","    main()\n"]}]}